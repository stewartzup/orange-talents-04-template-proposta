# datasource
spring.datasource.url=${BD_URL:jdbc:mysql://localhost:3306/proposta_desafio?createDatabaseIfNotExist=true&serverTimezone=UTC}
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD:33716242ste}
spring.jpa.hibernate.ddl-auto=update
server.port = 8585

# jpa
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

# actuator
#management.endpoint.health.show-details=always

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#dominio
financeiro.dominio=${FINANCEIRO_DOMINIO:http://localhost:9999/api/solicitacao}
cartao.dominio=${CARTAO_DOMINIO:http://localhost:8888/api/cartoes}

#security
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

#Prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}
#Prometheus (LINKS locais provisórios)
http_server_requests_seconds_count{method="POST",outcome="SUCCESS",status="201",uri="/propostas",} 20.0 
http_server_requests_seconds_count{method="POST",outcome="CLIENT_ERROR",status="422",uri="/propostas",} 5.0

